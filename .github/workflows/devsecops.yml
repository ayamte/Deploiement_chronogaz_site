name: DevSecOps Security Analysis

on:
  push:
    branches: [main, develop, devsecops/vulnerable-testing]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  security-scan:
    runs-on: ubuntu-latest
    name: Static Security Analysis (SAST & SCA)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            client/package-lock.json
            api/package-lock.json

      - name: Install validation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq tree

      - name: Install Dependencies - Client
        working-directory: ./client
        run: npm ci --legacy-peer-deps
        continue-on-error: false

      - name: Install Dependencies - API
        working-directory: ./api
        run: npm ci --legacy-peer-deps
        continue-on-error: false

      # ===================================
      # SCA - Analyse des Dépendances
      # ===================================

      - name: SCA - NPM Audit (Client - Production)
        working-directory: ./client
        run: |
          npm audit --json > ../sca-client-production.json || true
          npm audit --audit-level=moderate || true
        continue-on-error: true

      - name: SCA - NPM Audit (Client - Vulnerable)
        working-directory: ./client
        run: |
          if [ -f "package.vulnerable.json" ]; then
            cp package.json package.json.backup
            cp package.vulnerable.json package.json
            npm install --legacy-peer-deps
            npm audit --json > ../sca-client-vulnerable.json || true
            mv package.json.backup package.json
          else
            echo '{"metadata":{"vulnerabilities":{"total":0}}}' > ../sca-client-vulnerable.json
          fi
        continue-on-error: true

      - name: SCA - NPM Audit (API - Production)
        working-directory: ./api
        run: |
          npm audit --json > ../sca-api-production.json || true
          npm audit --audit-level=moderate || true
        continue-on-error: true

      - name: SCA - NPM Audit (API - Vulnerable)
        working-directory: ./api
        run: |
          if [ -f "package.vulnerable.json" ]; then
            cp package.json package.json.backup
            cp package.vulnerable.json package.json
            npm install --legacy-peer-deps
            npm audit --json > ../sca-api-vulnerable.json || true
            mv package.json.backup package.json
          else
            echo '{"metadata":{"vulnerabilities":{"total":0}}}' > ../sca-api-vulnerable.json
          fi
        continue-on-error: true

      - name: SCA - OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        timeout-minutes: 30
        with:
          project: 'ChronoGaz'
          path: '.'
          format: 'JSON,HTML'
          out: 'dependency-check-reports'
        continue-on-error: true

      - name: Upload SCA Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sca-reports
          path: |
            sca-client-production.json
            sca-client-vulnerable.json
            sca-api-production.json
            sca-api-vulnerable.json
            dependency-check-reports/
          retention-days: 30
          if-no-files-found: warn

      # ===================================
      # SAST - Analyse Statique du Code
      # ===================================

      - name: SAST - ESLint Security Plugin
        run: |
          set -euo pipefail
          
          TEMP_INSTALL_DIR="/tmp/eslint-tools"
          mkdir -p "$TEMP_INSTALL_DIR"
          cd "$TEMP_INSTALL_DIR"
          
          echo "🔧 Installation locale isolée d'ESLint & plugins"
          npm init -y
          npm install eslint@8.57.0 eslint-plugin-security eslint-plugin-no-secrets --force || true
          
          export PATH="$TEMP_INSTALL_DIR/node_modules/.bin:$PATH"
          
          cd $GITHUB_WORKSPACE
          
          cat > .eslintrc.security.json <<'EOF'
          {
            "env": {"browser": true, "es2021": true, "node": true},
            "parserOptions": {
              "ecmaVersion": 2021,
              "sourceType": "module",
              "ecmaFeatures": {"jsx": true}
            },
            "plugins": ["security", "no-secrets"],
            "extends": ["plugin:security/recommended"],
            "rules": {
              "no-secrets/no-secrets": "warn",
              "security/detect-eval-with-expression": "error",
              "security/detect-unsafe-regex": "error",
              "security/detect-non-literal-fs-filename": "warn"
            }
          }
          EOF

          echo '[]' > sast-eslint-client.json
          echo '[]' > sast-eslint-api.json
          
          run_eslint_scan() {
            base=$1
            pattern=$2
            out=$3
            echo "🔍 Lancement ESLint sur $base"
            
            eslint "$pattern" --config .eslintrc.security.json --format json --output-file "$out" 2>&1 || true

            if ! jq -e . "$out" >/dev/null 2>&1; then
              echo "⚠️ $out n'est pas un JSON valide. Réinitialisation."
              echo '[]' > "$out"
            fi
          }

          run_eslint_scan client/src 'client/src/**/*.{js,jsx}' sast-eslint-client.json
          run_eslint_scan api/src 'api/src/**/*.js' sast-eslint-api.json

          echo "✅ Final Client: $(stat -c%s sast-eslint-client.json 2>/dev/null || echo 0) bytes"
          echo "✅ Final API: $(stat -c%s sast-eslint-api.json 2>/dev/null || echo 0) bytes"
        continue-on-error: true

      - name: Upload SAST Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sast-reports
          path: |
            sast-eslint-client.json
            sast-eslint-api.json
          retention-days: 30
          if-no-files-found: warn

  # ====================================================================
  # Job DAST - Ajoutez votre job dast-scan ici
  # ====================================================================